@model List<Cineverse.Models.PregledKarataViewModel>

@{
    ViewData["Title"] = "Pregled rezervisanih karata";
    var today = DateOnly.FromDateTime(DateTime.Now);
}

<style>
    body {
        background-color: black;
        color: white;
        font-family: Arial, sans-serif;
    }

    .kartica {
        background-color: rgba(0, 0, 0, 0.7);
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 30px;
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .film-slika {
        width: 100px;
        border-radius: 8px;
    }

    .qr-kod {
        width: 150px;
    }

    .otkazi-btn {
        background-color: #d35400;
        color: white;
        padding: 8px 20px;
        border-radius: 5px;
        border: none;
        font-weight: bold;
        min-width: 180px;
        text-align: center;
    }

        .otkazi-btn:hover {
            background-color: #e67e22;
            cursor: pointer;
        }

    .tabs-container {
        display: flex;
        justify-content: center;
        margin-bottom: 30px;
    }

    .tabs {
        display: flex;
        gap: 15px;
        width: 90%;
        max-width: 800px;
    }

    .tab {
        padding: 15px 30px;
        border-radius: 8px;
        font-weight: bold;
        text-align: center;
        flex: 1;
        min-width: 250px;
        font-size: 1.1em;
        transition: all 0.3s ease;
    }

    .tab-active {
        background-color: #d35400;
        color: white;
    }

    .tab-inactive {
        background-color: #444;
        color: white;
        text-decoration: none;
    }

        .tab-inactive:hover {
            background-color: #555;
            transform: translateY(-2px);
        }

    .content-header {
        text-align: left;
        margin-left: calc(50% - 400px);
        max-width: 800px;
        width: 90%;
        margin-bottom: 20px;
    }

        .content-header h2 {
            font-size: 2rem;
            margin-bottom: 8px;
        }

        .content-header p {
            font-size: 1.2rem;
            color: #ddd;
            margin: 0;
        }

    .drop-area {
        width: 300px;
        height: 200px;
        border: 2px dashed #aaa;
        text-align: center;
        padding: 20px;
        border-radius: 8px;
        transition: border-color 0.3s ease;
    }

        .drop-area:hover {
            border-color: #d35400;
        }
</style>


<script src="https://cdn.jsdelivr.net/npm/jsqr/dist/jsQR.js"></script>

<div class="tabs-container">
    <div class="tabs">
        <div class="tab tab-active">Trenutno rezervisane karte</div>
        <a asp-action="PastReservations" class="tab tab-inactive">Prijašnje rezervacije</a>
    </div>
</div>

<div class="content-header">
    <h2>PREGLED KARTI</h2>
    @{
        var currentReservationsCount = Model.Count(x => x.DatumProjekcije >= today);
        string kartaText = "";

        if (currentReservationsCount == 1)
        {
            kartaText = "1 karta je trenutno rezervisana";
        }
        else if (currentReservationsCount >= 2 && currentReservationsCount <= 4)
        {
            kartaText = $"{currentReservationsCount} karte su trenutno rezervisane";
        }
        else
        {
            kartaText = $"{currentReservationsCount} karata je trenutno rezervisano";
        }
    }
    <p>@kartaText</p>
</div>

@foreach (var item in Model.OrderByDescending(x => x.DatumProjekcije).ThenByDescending(x => x.VrijemeProjekcije))
{
    if (item.DatumProjekcije >= today)
    {
        <div class="kartica">
            <img src="@item.SlikaFilmaUrl" alt="Poster filma" class="film-slika" />

            <div>
                <h3>@item.NazivFilma</h3>
                <p><strong>Vrijeme projekcije:</strong> @item.DatumProjekcije.ToString("dd.MM.yyyy"), @item.VrijemeProjekcije.ToString("HH:mm")</p>
                <p><strong>Mjesto:</strong> @item.Sala, Red @item.Red, Sjedište @item.Sjediste</p>
                <p><strong>Iznos:</strong> @item.Iznos.ToString("0.00") KM</p>
            </div>

            <div style="margin-left:auto; text-align:center;">
                <p><strong>Ovdje skenirajte QR kod:</strong></p>
                <img src="@item.QRKod" alt="QR Kod" class="qr-kod" />
            </div>

            <div id="drop-area-@item.KartaId" class="drop-area">
                <p>Prevucite QR kod ovdje</p>
            </div>

            <form asp-controller="PregledKarata" asp-action="Delete" method="post" style="margin-left: 20px;" onsubmit="return confirm('Da li ste sigurni da želite otkazati ovu rezervaciju?');">
                @Html.AntiForgeryToken()
                <input type="hidden" name="kartaId" value="@item.KartaId" />
                <button type="submit" class="otkazi-btn">Otkaži rezervaciju</button>
            </form>

            <script>
                (function () {
                    const dropArea = document.getElementById("drop-area-@item.KartaId");
                    const kartaId = @item.KartaId;

                    dropArea.addEventListener("dragover", (e) => {
                        e.preventDefault();
                        dropArea.style.borderColor = "green";
                    });

                    dropArea.addEventListener("dragleave", () => {
                        dropArea.style.borderColor = "#aaa";
                    });

                    dropArea.addEventListener("drop", async (e) => {
                        e.preventDefault();
                        dropArea.style.borderColor = "#aaa";

                        const file = e.dataTransfer.files[0];
                        if (!file || !file.type.startsWith("image")) {
                            alert("Molimo ubacite sliku QR koda.");
                            return;
                        }

                        const reader = new FileReader();
                        const img = new Image();

                        reader.onload = (event) => {
                            img.onload = async () => {
                                const canvas = document.createElement("canvas");
                                canvas.width = img.width;
                                canvas.height = img.height;

                                const ctx = canvas.getContext("2d");
                                ctx.drawImage(img, 0, 0);
                                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);

                                const code = jsQR(imageData.data, canvas.width, canvas.height);
                                if (code) {
                                    console.log("QR kod:", code.data);

                                    try {
                                        
                                        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                                        const response = await fetch('/PregledKarata/validacijaQRKoda', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/x-www-form-urlencoded',
                                                'RequestVerificationToken': token
                                            },
                                            body: `qrText=${encodeURIComponent(code.data)}&kartaId=${kartaId}&__RequestVerificationToken=${encodeURIComponent(token)}`
                                        });

                                        if (!response.ok) {
                                            throw new Error(`HTTP error! status: ${response.status}`);
                                        }

                                        const result = await response.json();

                                        if (result.valid) {
                                            window.location.href = `/PregledKarata/Uspjesno?kod=${encodeURIComponent(code.data)}`;
                                        } else {
                                            alert(`Greška: ${result.message}`);
                                        }

                                    } catch (error) {
                                        alert("Greška pri validaciji QR koda.");
                                        console.error("Validation error:", error);
                                    }

                                } else {
                                    alert("QR kod nije prepoznat.");
                                }
                            };

                            img.src = event.target.result;
                        };

                        reader.readAsDataURL(file);
                    });
                })();
            </script>
        </div>
    }
}